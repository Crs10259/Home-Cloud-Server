[project]
name = "home-cloud-server"
version = "1.0.0"
description = "Home Cloud Server - Flask-based cloud storage and management system"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "LICENSE"}

keywords = ["cloud", "storage", "flask", "file-management"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: System :: Filesystems",
]
dependencies = [
    "Flask>=3.1.0",
    "Flask-SQLAlchemy>=3.1.1",
    "SQLAlchemy>=1.4.49",
    "Werkzeug>=3.1.3",
    "Jinja2>=3.1.6",
    "MarkupSafe>=3.0.2",
    "itsdangerous>=2.2.0",
    "click>=8.1.8",
    "psutil>=5.9.8",
    "python-dateutil>=2.8.2",
    "pytz>=2025.2",
    "Flask-APScheduler>=1.13.1",
    "APScheduler>=3.10.4",
    "pillow>=10.2.0",
    "alembic>=1.15.2",
    "Flask-Migrate>=4.1.0",
    "bcrypt>=4.3.0",
    "Flask-Bcrypt>=1.0.1",
    "python-dotenv>=1.0.1",
    "colorama>=0.4.6",
    "cryptography>=42.0.5",
    "blinker>=1.9.0",
    "requests>=2.31.0",
    "zipstream-new>=1.1.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
]

[project.scripts]
home-cloud = "main:main"

[project.urls]
Homepage = "https://github.com/Crs10259/Home-Cloud-Server"
Repository = "https://github.com/Crs10259/Home-Cloud-Server"
Documentation = "https://github.com/Crs10259/Home-Cloud-Server#readme"
Issues = "https://github.com/Crs10259/Home-Cloud-Server/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
